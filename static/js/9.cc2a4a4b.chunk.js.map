{"version":3,"file":"static/js/9.cc2a4a4b.chunk.js","mappings":"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","sources":["components/Profile/Profile.module.css","webpack://mmy-app/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusHook.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://mmy-app/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://mmy-app/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withAuthContainer.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {\"messageImg\":\"ProfileInfo_messageImg__W1E7m\",\"textStyle\":\"ProfileInfo_textStyle__yt+FD\",\"photo\":\"ProfileInfo_photo__hMaYU\",\"errorTetx\":\"ProfileInfo_errorTetx__ewXLL\"};","import React from \"react\"\r\nimport { useEffect } from \"react\"\r\nimport { useState } from \"react\"\r\n\r\n\r\n\r\nconst ProfileStatusHook = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deActivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    const isOwner = props.profile.userId == props.authId\r\n    return (\r\n        <div>\r\n            {(editMode ?\r\n                <div>\r\n                    <input autoFocus={true} onBlur={deActivateEditMode} onChange={onStatusChange} value={status} />\r\n                </div> :\r\n                <span onDoubleClick={(isOwner)\r\n                    ? activateEditMode\r\n                    :\"\"} >\r\n                    {props.status || \"У меня нет статуса\"}\r\n                </span>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusHook","import Loader from '../../Loader/Loader';\r\nimport cssStyle from './ProfileInfo.module.css'\r\n// import ProfileStatus from './ProfileStatus';\r\nimport ProfileStatusHook from './ProfileStatusHook';\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Loader />\r\n    }\r\n\r\n    const takePhoto = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n    const isOwner = props.profile.userId == props.authId\r\n    return <div className={cssStyle.content}>\r\n        <div className={cssStyle.messageImg}>\r\n            <img src=\"https://st2.depositphotos.com/1184927/6310/i/600/depositphotos_63105155-stock-photo-purple-starry-background-for-facebook.jpg\" alt=\"fone\" />\r\n        </div>\r\n        <div>\r\n            <img src={props.profile.photos.large || 'https://shapka-youtube.ru/wp-content/uploads/2021/02/prikolnaya-avatarka-dlya-patsanov.jpg'}\r\n                className={cssStyle.photo}\r\n                alt='pofile page' />\r\n        </div>\r\n        <div>\r\n            {(isOwner) && <input type={'file'} onChange={takePhoto} />}\r\n        </div>\r\n        <div className={cssStyle.errorTetx}>\r\n            {(isOwner && props.error) ? <div>{props.error}</div> : <div></div>}\r\n        </div>\r\n        <div className={cssStyle.textStyle}>\r\n            <p>\r\n                {props.profile.fullName}\r\n            </p>\r\n            <p>\r\n                <ProfileStatusHook\r\n                    status={props.status}\r\n                    updateStatus={props.updateStatus}\r\n                    profile={props.profile}\r\n                    authId={props.authId} />\r\n            </p>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"MyPosts_content__ytfjS\",\"item\":\"MyPosts_item__LwIpL\"};","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Post_content__RCWkG\",\"item\":\"Post_item__P7NC+\",\"messageImg\":\"Post_messageImg__LfFNV\",\"messageText\":\"Post_messageText__dlB3U\",\"messageAuthor\":\"Post_messageAuthor__w42-y\",\"messageLikes\":\"Post_messageLikes__T4DmL\"};","import cssStyle from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return <div className={cssStyle.content}>\r\n        <div className={cssStyle.item}>\r\n            <div className={cssStyle.messageImg}>\r\n                <img src=\"https://www.blexar.com/avatar.png\" alt=\"ava\"/>\r\n            </div>\r\n            <div className={cssStyle.messageText}>\r\n                {props.message}\r\n            </div>\r\n            <div className={cssStyle.messageAuthor}>\r\n                {props.author}\r\n            </div>\r\n            <div className={cssStyle.messageLikes}>\r\n                Likes {props.like}\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport cssStyle from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\n\r\n\r\nconst MyPosts = (props) => {\r\n    let postsElements = [...props.posts].reverse().map(\r\n        (p) => <Post message={p.message} author={p.author} like={p.like} key={p.id} />\r\n    )\r\n\r\n    let onAddNewPost = () => {\r\n        props.addNewPost()\r\n    }\r\n\r\n    let onPostChange = (event) => {\r\n        let text = event.target.value\r\n        props.updateNewPostText(text)\r\n    }\r\n\r\n    return <div className={cssStyle.content}>\r\n        <div className={cssStyle.item}>\r\n            My Posts\r\n            <div>\r\n                <textarea name=\"post\" id=\"\" cols=\"30\" rows=\"1\" onChange={onPostChange} value={props.newPostText} />\r\n                <button onClick={onAddNewPost}>Add post</button>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default MyPosts;\r\n","// import Context from '../../../Context';\r\nimport { connect } from 'react-redux'\r\nimport { updateNewPostTextActionCreater, addPostActionCreater } from '../../../redux/profileReducer'\r\nimport MyPosts from './MyPosts';\r\n\r\n\r\n\r\n// const MyPostsContainer = (props) => {\r\n// let state = props.store.getState()\r\n\r\n// let addNewPost = () => {\r\n//     props.store.dispatch(addPostActionCreater());\r\n// }\r\n\r\n// let onPostChange = (text) => {\r\n//     props.store.dispatch(updateNewPostTextActionCreater(text))\r\n\r\n\r\n//     return (\r\n//         <Context.Consumer>{\r\n//             (store) => {\r\n//                 let state = store.getState()\r\n\r\n//                 let addNewPost = () => {\r\n//                     store.dispatch(addPostActionCreater());\r\n//                 }\r\n\r\n//                 let onPostChange = (text) => {\r\n//                     store.dispatch(updateNewPostTextActionCreater(text))\r\n//                 }\r\n\r\n//                 return <MyPosts\r\n//                     addNewPost={addNewPost}\r\n//                     updateNewPostText={onPostChange}\r\n//                     newPostText={state.profilePage.newPostText}\r\n//                     posts={state.profilePage.posts} />\r\n\r\n//             }\r\n//         }\r\n//         </Context.Consumer>\r\n//     )\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        newPostText: state.profilePage.newPostText,\r\n        posts: state.profilePage.posts,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addNewPost: () => {\r\n            dispatch(addPostActionCreater())\r\n        },\r\n        updateNewPostText: (text) => {\r\n            dispatch(updateNewPostTextActionCreater(text))\r\n        },\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;\r\n","import cssStyle from './Profile.module.css'\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\n\r\nconst Profile = (props) => {\r\n    return <div className={cssStyle.content}>\r\n        <div>\r\n            <ProfileInfo profile={props.profile} \r\n            status={props.status} \r\n            updateStatus={props.updateStatus} \r\n            authId={props.authId}\r\n            savePhoto={props.savePhoto}\r\n            error={props.error}/>\r\n            <MyPostsContainer \r\n            // store={props.store} \r\n            />\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Profile from './Profile';\r\nimport { getUserProfileThunkCreator, getUserStatusThunkCreator, updateUserStatusThunkCreator, savePhotoThunkCreator } from '../../redux/profileReducer'\r\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\r\nimport { WithAuthContainer } from '../../hoc/withAuthContainer';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileAPIContainer extends React.Component {\r\n\r\n    uploadUser() {\r\n        let userId = this.props.router.params.userid\r\n        if (!userId) {\r\n            userId = this.props.authId\r\n        }\r\n        this.props.getUserProfileThunkCreator(userId)\r\n        this.props.getUserStatusThunkCreator(userId)\r\n\r\n    }\r\n    componentDidMount() {\r\n        this.uploadUser()\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.router.params.userid !== prevProps.router.params.userid) {\r\n            this.uploadUser()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <div >\r\n            <div>\r\n                <Profile {...this.props}\r\n                    profile={this.props.profile}\r\n                    status={this.props.status}\r\n                    updateStatus={this.props.updateUserStatusThunkCreator}\r\n                    authId={this.props.authId} \r\n                    savePhoto={this.props.savePhotoThunkCreator}\r\n                    error={this.props.error}/>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authId: state.auth.userId,\r\n        isAuth: state.auth.isAuth,\r\n        error: state.profilePage.error\r\n    }\r\n}\r\n\r\nfunction withRouter(Component) {\r\n    function ComponentWithRouterProps(props) {\r\n        let location = useLocation()\r\n        let navigate = useNavigate()\r\n        let params = useParams()\r\n        return (<Component {...props} router={{ location, navigate, params }} />)\r\n    }\r\n    return ComponentWithRouterProps\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfileThunkCreator, getUserStatusThunkCreator, updateUserStatusThunkCreator, savePhotoThunkCreator }),\r\n    withRouter,\r\n    WithAuthContainer,\r\n)(ProfileAPIContainer)\r\n\r\n// const AuthContainerComponent = WithAuthContainer(ProfileAPIContainer)\r\n// const ProfileContainer = connect(mapStateToProps, { getUserProfileThunkCreator })(withRouter(AuthContainerComponent));\r\n//  ProfileContainer","import { connect } from \"react-redux\"\r\nimport { Navigate } from \"react-router-dom\"\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport const WithAuthContainer = (Component) => {\r\n    let RedirectComponent = (props) => {\r\n        if (!props.isAuth) return <Navigate to={\"/login\"} />\r\n        return <Component {...props} />\r\n    }\r\n    const RedirectComponentWithConnect = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    \r\n    return RedirectComponentWithConnect\r\n}"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","isOwner","profile","userId","authId","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","onDoubleClick","Loader","className","cssStyle","src","alt","photos","large","type","target","files","length","savePhoto","error","fullName","message","author","like","postsElements","posts","reverse","map","p","id","name","cols","rows","event","text","updateNewPostText","newPostText","onClick","addNewPost","connect","state","profilePage","dispatch","addPostActionCreater","updateNewPostTextActionCreater","MyPosts","ProfileAPIContainer","this","router","params","userid","getUserProfileThunkCreator","getUserStatusThunkCreator","uploadUser","prevProps","updateUserStatusThunkCreator","savePhotoThunkCreator","React","compose","auth","isAuth","Component","location","useLocation","navigate","useNavigate","useParams","WithAuthContainer","mapStateToPropsForRedirect","to"],"sourceRoot":""}