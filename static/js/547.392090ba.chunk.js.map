{"version":3,"file":"static/js/547.392090ba.chunk.js","mappings":"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","sources":["components/Users/Paginator.jsx","webpack://mmy-app/./src/components/Users/Users.module.css?b9d0","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selector.js","components/Users/UsersContainer.jsx"],"sourcesContent":["import React from 'react'\r\nimport Stack from '@mui/material/Stack';\r\nimport Pagination from '@mui/material/Pagination';\r\n\r\nlet Paginator = (props) => {\r\n\r\n    let pageCount = Math.ceil(props.totalUsersCount / props.pageSize)\r\n    let pages = []\r\n    for (let i = 1; i <= pageCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    let countPortion = Math.ceil(pageCount / props.portionPage)\r\n\r\n\r\n    return <div>\r\n        <Stack >\r\n            <Pagination\r\n                siblingCount={2}\r\n                count={countPortion}\r\n                page={props.currentPage}\r\n                onChange={(event, num) => props.onPageChanged(num)} />\r\n        </Stack>\r\n    </div>\r\n}\r\n\r\n\r\nexport default Paginator","// extracted by mini-css-extract-plugin\nexport default {\"photo\":\"Users_photo__kdpU0\",\"currentBold\":\"Users_currentBold__Sl3ck\",\"current\":\"Users_current__Uj0Sp\"};","import cssStyle from './Users.module.css'\r\nimport React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nlet User = (props) => {\r\n    const user = props.user\r\n    return <div>\r\n        <span>\r\n            <div>\r\n                <NavLink to={'/profile/' + user.id}>\r\n                    <img src={user.photos.small != null ? user.photos.small : 'https://shapka-youtube.ru/wp-content/uploads/2021/02/prikolnaya-avatarka-dlya-patsanov.jpg'}\r\n                        className={cssStyle.photo} />\r\n                </NavLink>\r\n            </div>\r\n            <div>\r\n                {user.followed ?\r\n                    <button disabled={props.followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                        props.unFollowThunkCreator(user.id)\r\n                    }} >Unfollow</button>\r\n                    : <button disabled={props.followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                        props.followThunkCreator(user.id)\r\n                    }}>Follow</button>}\r\n            </div>\r\n        </span>\r\n        <span>\r\n            <span>\r\n                <div>{user.name}</div>\r\n                <div>{user.status} </div>\r\n            </span>\r\n            <span>\r\n                <div>{'u.location.country'} </div>\r\n                <div>{'u.location.city'} </div>\r\n            </span>\r\n        </span>\r\n    </div>\r\n}\r\n\r\n\r\nexport default User","import React from 'react'\r\nimport Paginator from './Paginator';\r\nimport User from './User';\r\n\r\n\r\nlet Users = (props) => {\r\n\r\n\r\n    return <div>\r\n        <Paginator totalUsersCount={props.totalUsersCount}\r\n            pageSize={props.pageSize}\r\n            onPageChanged={props.onPageChanged}\r\n            portionPage={props.portionPage}\r\n            currentPage={props.currentPage} />\r\n        {\r\n            props.users.map(u => <User\r\n                user={u}\r\n                key={u.id}\r\n                unFollowThunkCreator={props.unFollowThunkCreator}\r\n                followThunkCreator={props.followThunkCreator}\r\n                followingInProgress={props.followingInProgress}\r\n            />)}\r\n    </div>\r\n}\r\n\r\nexport default Users","import { createSelector } from \"reselect\"\r\n\r\nconst getUsers = (state) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getUsersSuperSelector = createSelector( getUsers, (users) => {\r\n    return users\r\n})\r\n\r\n// Используем сложный селетор. Он необходим, если наш селектор не приметивный, а он делает каки-то \r\n// вычисления или какая-то доп функция, которую на не нужно перезапускать постоянно. Получается, что\r\n// мы ему указываем зависимости ( в нашем случае мы передаем ему приметивный силектор и если он не\r\n// меняется, тогда мы ничего не делаем, а если поменялось что-то в \"getUsers\", тогда это измененное\r\n// передается в \"(users)\" и пошло по функции. В нашем примере мы просто возвращаем этих же юзеров, но\r\n// может выполняться какя-то логика) \r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsLoading = (state) => {\r\n    return state.usersPage.isLoading\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\n\r\nexport const getPortionPage = (state) => {\r\n    return state.usersPage.portionPage\r\n}","import { connect } from 'react-redux'\r\nimport { unFollowThunkCreator, followThunkCreator, getUsersThunkCreator, changeCurrentPageThunkCreator} from \"../../redux/usersReducer\"\r\nimport React from 'react'\r\nimport Users from './Users'\r\nimport Loader from '../Loader/Loader'\r\nimport { getCurrentPage, getFollowingInProgress, getIsLoading, getPageSize, getPortionPage, getTotalUsersCount, getUsersSuperSelector } from '../../redux/users-selector'\r\n\r\n\r\nclass UsersAPIComponent extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsersThunkCreator(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.changeCurrentPageThunkCreator(pageNumber, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <div>\r\n                {this.props.isLoading ? <Loader /> : null}\r\n            </div>\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                portionPage = {this.props.portionPage}\r\n                currentPage={this.props.currentPage}\r\n                users={this.props.users}\r\n                onPageChanged={this.onPageChanged}\r\n                followingInProgress={this.props.followingInProgress}\r\n                unFollowThunkCreator={this.props.unFollowThunkCreator}\r\n                followThunkCreator={this.props.followThunkCreator}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsersSuperSelector(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        pageSize: getPageSize(state),\r\n        currentPage: getCurrentPage(state),\r\n        isLoading: getIsLoading(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n        portionPage: getPortionPage(state)\r\n    }\r\n}\r\n\r\n// let mapStateToProps = (state) => {\r\n//     return {\r\n//         users: state.usersPage.users,\r\n//         totalUsersCount: state.usersPage.totalUsersCount,\r\n//         pageSize: state.usersPage.pageSize,\r\n//         currentPage: state.usersPage.currentPage,\r\n//         isLoading: state.usersPage.isLoading,\r\n//         followingInProgress: state.usersPage.followingInProgress,\r\n//     }\r\n// }\r\n\r\n// let mapDispatchToProps = (dispatc) => {\r\n//     return {\r\n//         follow: (userId) => {\r\n//             dispatc(follow(userId))\r\n//             // в диспатч передаем наш action creator\r\n//         },\r\n//         unfollow: (userId) => {\r\n//             dispatc(unFollow(userId))\r\n//         },\r\n//         setUsers: (users) => {\r\n//             dispatc(setUsers(users))\r\n//         },\r\n//         setCurrentPage: (currentPage) => {\r\n//             dispatc(setCurrentPage(currentPage))\r\n//         },\r\n//         setTotalUsersCount: (totalCount) => {\r\n//             dispatc(setTotalUsersCount(totalCount))\r\n//         },\r\n//         switchIsLoading: (isLoading) => {\r\n//             dispatc(switchIsLoading(isLoading))\r\n//         }\r\n//     }\r\n// }\r\n\r\nconst UsersContainer = connect(mapStateToProps, {\r\n    unFollowThunkCreator,\r\n    followThunkCreator,\r\n    getUsersThunkCreator,\r\n    changeCurrentPageThunkCreator})(UsersAPIComponent)\r\n\r\n// вместо всего mapDispatchToProps можно передать объект, который содержит имя параметра, которое пойдет в пропсы в след компоненту \r\n// и наш action creator. т.к. эти имена совпадают, то можно написать только одно и js сам все додумает. а внутри connect сама \r\n// создасться коллбэк функция, которая нам нужна\r\n\r\nexport default UsersContainer"],"names":["props","pageCount","Math","ceil","totalUsersCount","pageSize","pages","i","push","countPortion","portionPage","Stack","Pagination","siblingCount","count","page","currentPage","onChange","event","num","onPageChanged","user","to","id","src","photos","small","className","cssStyle","followed","disabled","followingInProgress","some","onClick","unFollowThunkCreator","followThunkCreator","name","status","users","map","u","getUsersSuperSelector","createSelector","state","usersPage","getTotalUsersCount","getPageSize","getCurrentPage","getIsLoading","isLoading","getFollowingInProgress","getPortionPage","UsersAPIComponent","pageNumber","changeCurrentPageThunkCreator","this","getUsersThunkCreator","Loader","React","connect"],"sourceRoot":""}