{"version":3,"file":"static/js/136.32ee2604.chunk.js","mappings":"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","sources":["components/Profile/Profile.module.css","components/Profile/ProfileInfo/ProfileDataEditForm.jsx","webpack://mmy-app/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusHook.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://mmy-app/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://mmy-app/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withAuthContainer.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import { Field, Formik } from 'formik'\r\nimport * as yup from 'yup'\r\n\r\n\r\nconst ProfileDataEditForm = (props) => {\r\n\r\n    const validationSchema = yup.object().shape({\r\n        FullName: yup.string().required(\"Обязательное поле\"),\r\n        AboutMe: yup.string().required(\"Обязательное поле\"),\r\n        lookingForAJobDescription: yup.string().required(\"Обязательное поле\"),\r\n        // \"contacts.Facebook\": yup.string().url()\r\n    })\r\n\r\n    let lookingForAJobDescription = props.profile.lookingForAJobDescription || \"My skils\"\r\n    let aboutMe = props.profile.aboutMe || \"About me\"\r\n    return <div>\r\n        <Formik\r\n            initialValues={{\r\n                FullName: props.profile.fullName,\r\n                AboutMe: aboutMe,\r\n                lookingForAJob: props.profile.lookingForAJob,\r\n                lookingForAJobDescription: lookingForAJobDescription,\r\n                contacts: props.profile.contacts\r\n                // github: props.profile.contacts.github,\r\n                // vk: props.profile.contacts.vk,\r\n                // facebook: props.profile.contacts.facebook,\r\n                // instagram: props.profile.contacts.instagram,\r\n                // twitter: props.profile.contacts.twitter,\r\n                // website: props.profile.contacts.website,\r\n                // youtube: props.profile.contacts.youtube,\r\n                // mainLink: props.profile.contacts.mainLink,\r\n\r\n            }}\r\n            validateOnBlur\r\n            onSubmit={(values => {\r\n                props.updateDataProfile(values).then(\r\n                    ()=>{\r\n                        props.setEditMode(false)\r\n                    }\r\n                )\r\n            })}\r\n            validationSchema={validationSchema}\r\n        >\r\n            {({ values, errors, handleChange, handleBlur, isValid, handleSubmit }) => (\r\n                <div>\r\n                    <button\r\n                        onClick={handleSubmit}\r\n                        type='submit'\r\n                    >save</button>\r\n                    <div>\r\n                        <b>Open to work: </b>\r\n                        <Field\r\n                            type={\"checkbox\"}\r\n                            name={'lookingForAJob'}\r\n                            component={'input'}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <b>About me: </b>\r\n                        <input\r\n                            type={\"text\"}\r\n                            name={\"AboutMe\"}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.AboutMe}\r\n                        />\r\n                    </div>\r\n                    {errors.AboutMe && <p>{errors.AboutMe}</p>}\r\n                    <div>\r\n                        <b>Full name: </b>\r\n                        <input\r\n                            type={\"text\"}\r\n                            name={\"FullName\"}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.FullName}\r\n                        />\r\n                    </div>\r\n                    {errors.FullName && <p>{errors.FullName}</p>}\r\n                    <div>\r\n                        <b>My skils: </b>\r\n                        <input\r\n                            type={\"text\"}\r\n                            name={\"lookingForAJobDescription\"}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.lookingForAJobDescription}\r\n                        />\r\n                    </div>\r\n                    {errors.lookingForAJobDescription && <p>{errors.lookingForAJobDescription}</p>}\r\n                    <div  >\r\n                        <b>My contacts:</b>\r\n                    </div>\r\n                    <div>\r\n                        <b>Facebook: </b>\r\n                        <input\r\n                            type={\"text\"}\r\n                            name={\"contacts.facebook\"}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.contacts.facebook}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <b>Website: </b>\r\n                        <input\r\n                            type={\"text\"}\r\n                            name={\"contacts.website\"}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.contacts.website}\r\n                        />\r\n                    </div>\r\n                    {/* {errors.contacts && <p>{errors.contacts}</p>} */}\r\n                    <div>\r\n                        <b>Vk: </b>\r\n                        <input\r\n                            type={\"text\"}\r\n                            name={\"contacts.vk\"}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.contacts.vk}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <b>Twitter: </b>\r\n                        <input\r\n                            type={\"text\"}\r\n                            name={\"contacts.twitter\"}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.contacts.twitter}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <b>Instagram: </b>\r\n                        <input\r\n                            type={\"text\"}\r\n                            name={\"contacts.instagram\"}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.contacts.instagram}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <b>Youtube: </b>\r\n                        <input\r\n                            type={\"text\"}\r\n                            name={\"contacts.youtube\"}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.contacts.youtube}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <b>Github: </b>\r\n                        <input\r\n                            type={\"text\"}\r\n                            name={\"contacts.github\"}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.contacts.github}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <b>MainLink: </b>\r\n                        <input\r\n                            type={\"text\"}\r\n                            name={\"contacts.mainLink\"}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.contacts.mainLink}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </Formik>\r\n\r\n    </div>\r\n}\r\n\r\nexport default ProfileDataEditForm;","// extracted by mini-css-extract-plugin\nexport default {\"messageImg\":\"ProfileInfo_messageImg__W1E7m\",\"profileName\":\"ProfileInfo_profileName__lguWf\",\"textStyle\":\"ProfileInfo_textStyle__yt+FD\",\"photo\":\"ProfileInfo_photo__hMaYU\",\"errorTetx\":\"ProfileInfo_errorTetx__ewXLL\",\"listContacts\":\"ProfileInfo_listContacts__qhHkP\"};","import React from \"react\"\r\nimport { useEffect } from \"react\"\r\nimport { useState } from \"react\"\r\n\r\n\r\n\r\nconst ProfileStatusHook = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deActivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    const isOwner = props.profile.userId == props.authId\r\n    return (\r\n        <div>\r\n            {(editMode ?\r\n                <div>\r\n                    <input autoFocus={true} onBlur={deActivateEditMode} onChange={onStatusChange} value={status} />\r\n                </div> :\r\n                <span onDoubleClick={(isOwner) && activateEditMode} >\r\n                    {props.status || \"У меня нет статуса\"}\r\n                </span>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusHook","import { useState } from 'react';\r\nimport Loader from '../../Loader/Loader';\r\nimport ProfileDataEditForm from './ProfileDataEditForm';\r\nimport cssStyle from './ProfileInfo.module.css'\r\n// import ProfileStatus from './ProfileStatus';\r\nimport ProfileStatusHook from './ProfileStatusHook';\r\n\r\nconst ProfileInfo = (props) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n    \r\n    if (!props.profile) {\r\n        return <Loader />\r\n    }\r\n\r\n\r\n    const takePhoto = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n    const isOwner = props.profile.userId == props.authId\r\n    return <div className={cssStyle.content}>\r\n        <div className={cssStyle.messageImg}>\r\n            <img src=\"https://st2.depositphotos.com/1184927/6310/i/600/depositphotos_63105155-stock-photo-purple-starry-background-for-facebook.jpg\" alt=\"fone\" />\r\n        </div>\r\n        <div className={cssStyle.textStyle}>\r\n            <div className={cssStyle.profileName} >\r\n                {props.profile.fullName}\r\n            </div>\r\n            <div>\r\n                <ProfileStatusHook\r\n                    status={props.status}\r\n                    updateStatus={props.updateStatus}\r\n                    profile={props.profile}\r\n                    authId={props.authId} />\r\n            </div>\r\n            <div>\r\n                <img src={props.profile.photos.large || 'https://shapka-youtube.ru/wp-content/uploads/2021/02/prikolnaya-avatarka-dlya-patsanov.jpg'}\r\n                    className={cssStyle.photo}\r\n                    alt='pofile page' />\r\n            </div>\r\n            <div>\r\n                {(isOwner) && <input type={'file'} onChange={takePhoto} />}\r\n            </div>\r\n            <div className={cssStyle.errorTetx}>\r\n                {(isOwner && props.error) ? <div>{props.error}</div> : <div></div>}\r\n            </div>\r\n            { editMode \r\n            ?<ProfileDataEditForm isOwner={props.isOwner} takePhoto={props.takePhoto} profile={props.profile} setEditMode={setEditMode} updateDataProfile={props.updateDataProfile}/>\r\n            :<ProfileData isOwner={props.isOwner} takePhoto={props.takePhoto} profile={props.profile} setEditMode={setEditMode}/>}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport const Contacts = (props) => {\r\n    return <div className={cssStyle.listContacts}><b>{props.contactTitle}:</b>{props.contactValue}</div>\r\n}\r\n\r\nconst ProfileData = (props) => {\r\n    return <div>\r\n        <button onClick={()=>{props.setEditMode(true)}}>Edit</button>\r\n        <div>\r\n            <b>About me: </b>{props.profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b>Open to work: </b>{props.profile.lookingForAJob ? \"Yes\" : \"No\"}\r\n        </div>\r\n        {props.profile.lookingForAJob && <div>\r\n            <b>My skils: </b>{props.profile.lookingForAJobDescription}\r\n        </div>}\r\n        <div  >\r\n            <b>My contacts:</b>{Object.keys(props.profile.contacts).map(key => {\r\n                return <Contacts key={key} contactTitle={key} contactValue={props.profile.contacts[key]} />\r\n            })\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"MyPosts_content__ytfjS\",\"item\":\"MyPosts_item__LwIpL\"};","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Post_content__RCWkG\",\"item\":\"Post_item__P7NC+\",\"messageImg\":\"Post_messageImg__LfFNV\",\"messageText\":\"Post_messageText__dlB3U\",\"messageAuthor\":\"Post_messageAuthor__w42-y\",\"messageLikes\":\"Post_messageLikes__T4DmL\"};","import cssStyle from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return <div className={cssStyle.content}>\r\n        <div className={cssStyle.item}>\r\n            <div className={cssStyle.messageImg}>\r\n                <img src=\"https://www.blexar.com/avatar.png\" alt=\"ava\"/>\r\n            </div>\r\n            <div className={cssStyle.messageText}>\r\n                {props.message}\r\n            </div>\r\n            <div className={cssStyle.messageAuthor}>\r\n                {props.author}\r\n            </div>\r\n            <div className={cssStyle.messageLikes}>\r\n                Likes {props.like}\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport cssStyle from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\n\r\n\r\nconst MyPosts = (props) => {\r\n    let postsElements = [...props.posts].reverse().map(\r\n        (p) => <Post message={p.message} author={p.author} like={p.like} key={p.id} />\r\n    )\r\n\r\n    let onAddNewPost = () => {\r\n        props.addNewPost()\r\n    }\r\n\r\n    let onPostChange = (event) => {\r\n        let text = event.target.value\r\n        props.updateNewPostText(text)\r\n    }\r\n\r\n    return <div className={cssStyle.content}>\r\n        <div className={cssStyle.item}>\r\n            My Posts\r\n            <div>\r\n                <textarea name=\"post\" id=\"\" cols=\"30\" rows=\"1\" onChange={onPostChange} value={props.newPostText} />\r\n                <button onClick={onAddNewPost}>Add post</button>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default MyPosts;\r\n","// import Context from '../../../Context';\r\nimport { connect } from 'react-redux'\r\nimport { updateNewPostTextActionCreater, addPostActionCreater } from '../../../redux/profileReducer'\r\nimport MyPosts from './MyPosts';\r\n\r\n\r\n\r\n// const MyPostsContainer = (props) => {\r\n// let state = props.store.getState()\r\n\r\n// let addNewPost = () => {\r\n//     props.store.dispatch(addPostActionCreater());\r\n// }\r\n\r\n// let onPostChange = (text) => {\r\n//     props.store.dispatch(updateNewPostTextActionCreater(text))\r\n\r\n\r\n//     return (\r\n//         <Context.Consumer>{\r\n//             (store) => {\r\n//                 let state = store.getState()\r\n\r\n//                 let addNewPost = () => {\r\n//                     store.dispatch(addPostActionCreater());\r\n//                 }\r\n\r\n//                 let onPostChange = (text) => {\r\n//                     store.dispatch(updateNewPostTextActionCreater(text))\r\n//                 }\r\n\r\n//                 return <MyPosts\r\n//                     addNewPost={addNewPost}\r\n//                     updateNewPostText={onPostChange}\r\n//                     newPostText={state.profilePage.newPostText}\r\n//                     posts={state.profilePage.posts} />\r\n\r\n//             }\r\n//         }\r\n//         </Context.Consumer>\r\n//     )\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        newPostText: state.profilePage.newPostText,\r\n        posts: state.profilePage.posts,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addNewPost: () => {\r\n            dispatch(addPostActionCreater())\r\n        },\r\n        updateNewPostText: (text) => {\r\n            dispatch(updateNewPostTextActionCreater(text))\r\n        },\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;\r\n","import cssStyle from './Profile.module.css'\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\n\r\nconst Profile = (props) => {\r\n    return <div className={cssStyle.content}>\r\n        <div>\r\n            <ProfileInfo profile={props.profile} \r\n            status={props.status} \r\n            updateStatus={props.updateStatus} \r\n            authId={props.authId}\r\n            savePhoto={props.savePhoto}\r\n            error={props.error}\r\n            updateDataProfile={props.updateDataProfile}/>\r\n            <MyPostsContainer \r\n            // store={props.store} \r\n            />\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Profile from './Profile';\r\nimport { getUserProfileThunkCreator, getUserStatusThunkCreator, updateUserStatusThunkCreator, savePhotoThunkCreator, updateDataProfileThunkCreator } from '../../redux/profileReducer'\r\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\r\nimport { WithAuthContainer } from '../../hoc/withAuthContainer';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileAPIContainer extends React.Component {\r\n\r\n    uploadUser() {\r\n        let userId = this.props.router.params.userid\r\n        if (!userId) {\r\n            userId = this.props.authId\r\n        }\r\n        this.props.getUserProfileThunkCreator(userId)\r\n        this.props.getUserStatusThunkCreator(userId)\r\n\r\n    }\r\n    componentDidMount() {\r\n        this.uploadUser()\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.router.params.userid !== prevProps.router.params.userid) {\r\n            this.uploadUser()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <div >\r\n            <div>\r\n                <Profile {...this.props}\r\n                    profile={this.props.profile}\r\n                    status={this.props.status}\r\n                    updateStatus={this.props.updateUserStatusThunkCreator}\r\n                    authId={this.props.authId} \r\n                    savePhoto={this.props.savePhotoThunkCreator}\r\n                    updateDataProfile={this.props.updateDataProfileThunkCreator}\r\n                    error={this.props.error}/>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authId: state.auth.userId,\r\n        isAuth: state.auth.isAuth,\r\n        error: state.profilePage.error\r\n    }\r\n}\r\n\r\nfunction withRouter(Component) {\r\n    function ComponentWithRouterProps(props) {\r\n        let location = useLocation()\r\n        let navigate = useNavigate()\r\n        let params = useParams()\r\n        return (<Component {...props} router={{ location, navigate, params }} />)\r\n    }\r\n    return ComponentWithRouterProps\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfileThunkCreator, getUserStatusThunkCreator, updateUserStatusThunkCreator, savePhotoThunkCreator, updateDataProfileThunkCreator}),\r\n    withRouter,\r\n    WithAuthContainer,\r\n)(ProfileAPIContainer)\r\n\r\n// const AuthContainerComponent = WithAuthContainer(ProfileAPIContainer)\r\n// const ProfileContainer = connect(mapStateToProps, { getUserProfileThunkCreator })(withRouter(AuthContainerComponent));\r\n//  ProfileContainer","import { connect } from \"react-redux\"\r\nimport { Navigate } from \"react-router-dom\"\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport const WithAuthContainer = (Component) => {\r\n    let RedirectComponent = (props) => {\r\n        if (!props.isAuth) return <Navigate to={\"/login\"} />\r\n        return <Component {...props} />\r\n    }\r\n    const RedirectComponentWithConnect = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    \r\n    return RedirectComponentWithConnect\r\n}"],"names":["props","validationSchema","yup","shape","FullName","required","AboutMe","lookingForAJobDescription","profile","aboutMe","initialValues","fullName","lookingForAJob","contacts","validateOnBlur","onSubmit","values","updateDataProfile","then","setEditMode","errors","handleChange","handleBlur","handleSubmit","isValid","onClick","type","name","component","onChange","onBlur","value","facebook","website","vk","twitter","instagram","youtube","github","mainLink","useState","editMode","status","setStatus","useEffect","isOwner","userId","authId","autoFocus","updateStatus","e","currentTarget","onDoubleClick","Contacts","className","cssStyle","contactTitle","contactValue","ProfileData","Object","keys","map","key","Loader","src","alt","photos","large","target","files","length","savePhoto","error","takePhoto","message","author","like","postsElements","posts","reverse","p","id","cols","rows","event","text","updateNewPostText","newPostText","addNewPost","connect","state","profilePage","dispatch","addPostActionCreater","updateNewPostTextActionCreater","MyPosts","ProfileAPIContainer","this","router","params","userid","getUserProfileThunkCreator","getUserStatusThunkCreator","uploadUser","prevProps","updateUserStatusThunkCreator","savePhotoThunkCreator","updateDataProfileThunkCreator","React","compose","auth","isAuth","Component","location","useLocation","navigate","useNavigate","useParams","WithAuthContainer","mapStateToPropsForRedirect","to"],"sourceRoot":""}